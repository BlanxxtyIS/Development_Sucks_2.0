@using System.Net.Http.Json
@inject HttpClient Http

@if (_loading)
{
    <p>@errorText</p>
}
else
{
    <MudTable Items="@_chapters.Take(4)" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info">
        <HeaderContent>
            <MudTh>Id</MudTh>
            <MudTh>Language Id</MudTh>
            <MudTh>Title</MudTh>
            <MudTh>Description</MudTh>
            <MudTh>IconUrl</MudTh>
            <MudTh>Order</MudTh>
            <MudTh>Lessons</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="Email">@context.LanguageId</MudTd>
            <MudTd DataLabel="Username">@context.Title</MudTd>
            <MudTd DataLabel="Username">@context.Description</MudTd>
            <MudTd DataLabel="Username">@context.IconUrl</MudTd>
            <MudTd DataLabel="Username">@context.Order</MudTd>
            <MudTd DataLabel="Username">@context.Lessons</MudTd>

            <MudButton Variant="Variant.Filled" Color="Color.Primary">Редактировать</MudButton>
        </RowTemplate>
    </MudTable>
}

@code {
    private bool _loading = true;
    private string errorText = "Загрузка глав...";

    private IList<ChapterDto>? _chapters;
    private IList<LessonDto>? _lessons;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var chapters = await Http.GetFromJsonAsync<List<ChapterDto>>("api/chapters");
            var lessons = await Http.GetFromJsonAsync<List<LessonDto>>("api/lessons");

            if (chapters != null && lessons != null)
            {
                _chapters = chapters.ToList();
                _lessons = lessons.ToList();
            }
            else
            {
                errorText = "Список глав пуст";
            }
            _loading = false;
        }
        catch (Exception ex)
        {
            errorText = $"Ошибка: {ex.Message}";
        }
    }
}