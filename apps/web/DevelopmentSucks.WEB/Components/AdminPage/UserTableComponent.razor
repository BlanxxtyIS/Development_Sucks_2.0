@using System.Net.Http.Json
@inject HttpClient Http

@if (_loading) {
    <p>@errorText</p>
} else {
    <MudTable Items="@_users.Take(4)" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading" LoadingProgressColor="Color.Info">
        <HeaderContent>
            <MudTh>Id</MudTh>
            <MudTh>Email</MudTh>
            <MudTh>Username</MudTh>
            <MudTh>Created At</MudTh>
            <MudTh>Last Login</MudTh>
            <MudTh>User Role Id</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="Email">@context.Email</MudTd>
            <MudTd DataLabel="Username">@context.Username</MudTd>
            <MudTd DataLabel="Created At">@context.CreatedAt</MudTd>
            <MudTd DataLabel="Last Login">@context.LastLogin</MudTd>
            <MudTd DataLabel="User Role Id">@context.UserRoleId</MudTd>
            <MudButton Variant="Variant.Filled" Color="Color.Primary">Редактировать</MudButton>
        </RowTemplate>
    </MudTable>
}

@code {
    private bool _loading = true;
    private string errorText = "Загрузка пользователей...";

    private IList<UserDto>? _users;

    protected override async Task OnInitializedAsync()
    {
        try {
            var users = await Http.GetFromJsonAsync<List<UserDto>>("api/users");

            if (users != null) {
                _users = users.ToList();
            } else {
                errorText = "Список пользователей пуст";
            }
            _loading = false;
        }
        catch (Exception ex) {
            errorText = $"Ошибка: {ex.Message}";
        }
    }
}